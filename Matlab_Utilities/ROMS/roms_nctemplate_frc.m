function info = roms_nctemplate_frc(varlist)
%=========================================================================%
% info = roms_nctemplate_frc(varlist)
% 
% Generate a structure containing dimension and variable information of a
% typical ROMS surface forcings NetCDF file containing the forcings
% by the cell array of strings varlist.  Dimension lengths and variable 
% values are initially blank, but can be set manually.
% 
% Alternately, calling roms_ncgen_frc will generate a template forcing 
% NetCDF file with dimension lengths and variable values present in the 
% roms.in file specified by this function.
% 
% Possible entries for varlist include:
% 'Pair'        Surface air pressure (N m-2)
% 'Tair'        Surface air temperature (Degrees Celsius)
% 'Qair'        Surface air relative humidity (percentage)
% 'rain'        Rainfall rate (kg m-2 s-1)
% 'swrad'       Net shortwave radiation flux (W m-2)
% 'lwrad_down'  Downward longwave radiation flux (W m-2)
% 
% For now, this only contains variables used by RIROMS.  This may be
% changed in the future to contain all possible forcing variables as listed
% at https://www.myroms.org/index.php?page=forcing
%=========================================================================%
% by Arin Nelson on 03/08/2021
%=========================================================================%


  % The info structure
  info = struct;

  % The attributes
  info.atts = {'type','FORCING file';...
               'history',['generated by roms_nctemplate_frc.m on ' datestr(now) '.']};
           
  % The dimensions
  info.dims = {'nlon',  [], 0; ...
               'nlat', [], 0; ...
               'time',    [], 1; ...
              };
          
  % The grid variables
  info.vars = [];
  info.vars(end+1).name = 'lon';
  info.vars(end  ).info = {'type',          'NC_DOUBLE'; ...
                           'dimid',         [0 1]; ...
                           'long_name',     'longitude'; ...
                           'units',         'degree_east'; ...
                           'standard_name', 'longitude'; ...
                          };
  info.vars(end+1).name = 'lat';
  info.vars(end  ).info = {'type',          'NC_DOUBLE'; ...
                           'dimid',         [0 1]; ...
                           'long_name',     'latitude'; ...
                           'units',         'degree_north'; ...
                           'standard_name', 'latitude'; ...
                          };
  
  % The other variables
  for i=1:numel(varlist)
  switch varlist{i}
      
    case 'Pair'
      info.vars(end+1).name = 'pair_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'surface air pressure time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'Pair';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'surface air pressure'; ...
                               'units',     'N m-2'; ...
                               'coordinates',      'lon, lat'; ...
                              };

    case 'Tair'
      info.vars(end+1).name = 'tair_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'surface air temperature time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'Tair';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'surface air temperature'; ...
                               'units',     'Celsius'; ...
                               'coordinates',      'lon, lat'; ...
                              };
          
    case 'Qair'
      info.vars(end+1).name = 'qair_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'surface air pressure time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'Qair';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'surface air relative humidity'; ...
                               'units',     'percentage'; ...
                               'coordinates',      'lon, lat'; ...
                              }; 
          
      case 'rain'
      info.vars(end+1).name = 'rain_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'rainfall rate time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'rain';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'rainfall rate'; ...
                               'units',     'kg m-2 s-1'; ...
                               'coordinates',      'lon, lat'; ...
                              }; 
          
    case 'swrad'
      info.vars(end+1).name = 'srf_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'net shortwave radiation flux time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'swrad';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'net shortwave radiation flux'; ...
                               'units',     'W m-2'; ...
                               'coordinates',      'lon, lat'; ...
                              };
          
    case 'lwrad_down'
      info.vars(end+1).name = 'lrf_time';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [2]; ...
                               'long_name', 'downward longwave radiation flux time'; ...
                               'units',     ''; ...  % MAKE SURE TO SET THIS!
                               };  
      info.vars(end+1).name = 'lwrad_down';
      info.vars(end  ).info = {'type',      'NC_DOUBLE'; ...
                               'dimid',     [0 1 2]; ...
                               'long_name', 'downward longwave radiation flux'; ...
                               'units',     'W m-2'; ...
                               'coordinates',      'lon, lat'; ...
                              };
          
      otherwise
          warning(['Unknown variable: ' varlist{i} ', skipping...']);
      
  end
  end
  clear i;



  
end