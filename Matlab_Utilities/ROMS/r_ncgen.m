function status = r_ncgen(fileName,fileInfo)
%=========================================================================%
% status = ncGenerate(fileName,fileInfo)
% Create the NetCDF file <fileName> from the information in the structure
% <fileInfo>.  Typically this is generated by another file, such as
% ncGenerate_ini, etc., but you can use it for your own NetCDFs given your
% fileInfo structure is structured correctly.
%=========================================================================%
% by Arin Nelson on 09/23/2020
%=========================================================================%

% Create the file
ncid = netcdf.create(fileName,'CLOBBER');

% Define the dimensions
dimid = zeros(numel(fileInfo.dims),1);
for i=1:numel(fileInfo.dims)
  dimid(i) = netcdf.defDim(ncid,fileInfo.dims(i).name,fileInfo.dims(i).value);
end

% Put attributes
for i=1:numel(fileInfo.atts)
  netcdf.putAtt(ncid,netcdf.getConstant('GLOBAL'),fileInfo.atts(i).name,fileInfo.atts(i).value);
end

% Define the variables
varid = zeros(numel(fileInfo.vars),1);
for i=1:numel(fileInfo.vars)
  netcdf.defVar(ncid,fileInfo.vars(i).name,fileInfo.vars(i).info{1,2},fileInfo.vars(i).info{2,2});
end

% Put variable attributes
for i=1:numel(fileInfo.vars)
  if(size(fileInfo.vars(i).info,1)>2)
    for j=3:size(fileInfo.vars(i).info,1)
      netcdf.putAtt(ncid,i-1,fileInfo.vars(i).info{j,1},fileInfo.vars(i).info{j,2});
    end
  end
end

% End definitions
netcdf.endDef(ncid);

% If any variables have been defined, set them
try
for i=1:numel(fileInfo.vars)
  if(~isempty(fileInfo.vars(i).value))
%     if(numel(fileInfo.vars(i).value)>1)
%       pause(1e-9);
%     end
    netcdf.putVar(ncid,i-1,fileInfo.vars(i).value);
  end
end
catch err; end

% Close the file
netcdf.close(ncid);

% if successful, status=1
status = 1;

% Done!
end